浏览器端的JS

主要包括 ECMAScript DOM BOM 

后端包括 NODE.JS

ECMAScript 语法 变量 循环 作用域 函数 闭包 正则

DOM 操作元素节点

BOM 和浏览器操作相关 比如可以获取浏览器的类型 浏览器窗口的大小

引入方式

src 外部引入

script  内置

渲染机制

网络层下载html文件----->加载CSS文件(加载资源，就是外部的东西)有两种方式(一种是全部加载完毕渲染，一种是先按照浏览器的自己的样式渲染绘制，然后等你的样式下载完了之后，再渲染绘制一遍)---->html标记（实际上是字符串）------>浏览器通过正则进行匹配------>语义的分析--->解析成为一个对象

DOM---文档对象模型

主：
  解析HTML代码 构建DOM树
  解析CSS 代码 构建CSSOM树
  把DOM树和CSS树组合构建成渲染树
  渲染树的基础上进行布局，计算每个节点的几何结构
  把每个节点绘制到屏幕上

CSS和JS 的顺序放置问题

1 会引起 白屏和FOUC(无样式内容闪烁)

2 link和import会有什么区别


JS 语法

var a = 1 ;
    b = 2 ; 全局变量

所谓标识符是指变量、函数、属性的名字，或者函数的参数。标识符的书写有几个特征

区分大小写
第一个字符必须是字母、下划线（_）、或者是$
后面的可以是字母、数字、下划线、$

使用是实际意义的单词
变量使用驼峰规则，第一个单词首字母小写，后面单词首字母大写
变量使用名词，方法函数使用动词开头，常量全部用大写字母，函数创建对象首字母大写

变量

弱类型

语句

变量提升

注释

数据类型 简单数据类型 Null Undefined Boolean Number String
        复杂数据类型 Object

        Null

        Null类型只有一个值：null，表示空指针，也就是不存在的东西

        Undefined

        Undefined类型也只有一个值undefined，表示变量只被声明，没有被初始化

        Boolean

        Boolean有两个值

        true
        false

        Number

        JavaScript的数字类型和其它语言有所不同，没有整型和浮点数的区别，统一都是Number类型，
        可以表示十进制、八进制、十六进制

        浮点数

        数值范围

        isFinite()

        字符串长度 length

        ParseInt() 字符串转化为数字

        ParseFloat() 转化为浮点数

        typeof() 数字 字符串 布尔类型的数值 function undefined

        Object 对象

        {} 是仿json格式

        var obj = new Object();

        运算符

        算术运算符 + - * \ % 自增 自减 负数 数值

        a++ 先赋值 再自增
        ++a 先自增 再赋值

        a-- 先赋值 再自减
        --a 先自剪 再赋值

        赋值运算法 += -+ *= \= %= >>= <<= >>>= &= |= ^=

        比较运算法 >  <  == !== >=  <=

        布尔运算法 ！ && ||  三元

        权重

        小括号 ++ typeof 比较运算符

相等

      2 == “true” // false
      if(2) alert(1) // ture

流程控制语句

函数 arguments
